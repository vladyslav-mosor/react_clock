{"version":3,"sources":["components/Clock/Clock.tsx","components/Clock/index.ts","App.tsx","index.tsx"],"names":["getTimeString","date","toUTCString","slice","Clock","state","currentTime","Date","timerId","this","window","setInterval","newDate","console","info","setState","prevProps","prevName","name","currentName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","handleClick","event","button","document","oncontextmenu","preventDefault","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUA,SAASA,EAAcC,GACrB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIL,KAEpBG,OAAOG,QAAQC,KAAKd,EAAcY,IAElC,EAAKG,SAAS,CAAET,YAAaM,MAC5B,OAdP,gCAiBE,SAAmBI,GACjB,IAAcC,EAAaD,EAAnBE,KACMC,EAAgBV,KAAKW,MAA3BF,KAEJD,IAAaE,GACfT,OAAOG,QAAQQ,MAAf,uBAAqCJ,EAArC,eAAoDE,MAtB1D,kCA0BE,WACEG,cAAcb,KAAKD,WA3BvB,oBA8BE,WACE,IAAQF,EAAgBG,KAAKJ,MAArBC,YACAY,EAAST,KAAKW,MAAdF,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGvB,EAAcM,YA3CzB,GAA2BkB,aCZZpB,ICQf,SAASqB,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWzB,OAAO,GAE3C,MAAM,SAAN,OAAgBuB,GAGX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVC,UAAW,WAHf,EAMEvB,QAAU,EANZ,EAoBEwB,YAAc,SAACC,GACQ,IAAjBA,EAAMC,QACR,EAAKnB,SAAS,CAAEe,UAAU,IAGP,IAAjBG,EAAMC,QACR,EAAKnB,SAAS,CAAEe,UAAU,KA1BhC,uDAQE,WAA2B,IAAD,OACxBrB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKI,SAAS,CAAEgB,UAAWN,QAC1B,MAEHU,SAASC,cAAgB,SAACH,GACxBA,EAAMI,kBAGRF,SAASG,iBAAiB,UAAW7B,KAAKuB,eAjB9C,oBA8BE,WACE,MAAgCvB,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,gCACE,6CAECA,GAAY,cAAC,EAAD,CAAOZ,KAAMa,WArClC,GAAyBP,aCbzBe,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.7d413ef4.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  currentTime: Date;\n};\n\nfunction getTimeString(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const newDate = new Date();\n\n      window.console.info(getTimeString(newDate));\n\n      this.setState({ currentTime: newDate });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { name: prevName } = prevProps;\n    const { name: currentName } = this.props;\n\n    if (prevName !== currentName) {\n      window.console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getTimeString(currentTime)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Clock } from './Clock';\n\nexport default Clock;\n","import { Component } from 'react';\nimport './App.scss';\n\nimport Clock from './components/Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.oncontextmenu = (event) => {\n      event.preventDefault();\n    };\n\n    document.addEventListener('mouseup', this.handleClick);\n  }\n\n  handleClick = (event: MouseEvent) => {\n    if (event.button === 0) {\n      this.setState({ hasClock: true });\n    }\n\n    if (event.button === 2) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div>\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}